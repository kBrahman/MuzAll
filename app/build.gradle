apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "id.gradle"
def localProperties = new Properties()
localProperties.load(rootProject.file('local.properties').newDataInputStream())
def keystoreProperties = new Properties()
keystoreProperties.load(rootProject.file("keystore.properties").newDataInputStream())
android {
    signingConfigs {
        zhet {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion 31
    buildToolsVersion = '30.0.3'
    defaultConfig {
        applicationId localProperties["app_id"]
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 123
        versionName "2.23"
        buildConfigField "String[]", "IDS", "{$ids}"
        multiDexEnabled true
        buildConfigField "String", "SERVER", localProperties["server"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.zhet
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "MuzAll.apk"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.0.1"
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    kotlinOptions {
        useIR = true
        jvmTarget = '11'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.dagger:dagger-android-support:2.38.1'
    kapt 'com.google.dagger:dagger-compiler:2.38.1'
    kapt 'com.google.dagger:dagger-android-processor:2.38.1'
    implementation 'com.google.firebase:firebase-analytics:19.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
    }
    //compose
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'androidx.compose.foundation:foundation:1.0.1'
    implementation 'androidx.compose.material:material:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.0-beta02'
    implementation group: 'androidx.compose.ui', name: 'ui-viewbinding', version: '1.0.1'

    //ads
    implementation 'com.google.android.gms:play-services-ads:20.2.0'
}
task copyFile(type: Copy) {
    from(rootProject.file('crashlytics/google-services_muz_all.json')) {
        rename 'google-services_muz_all.json', 'google-services.json'
    }
    into(rootProject.file('app'))
}

gradle.projectsEvaluated {
    preBuild.dependsOn(copyFile)
}
